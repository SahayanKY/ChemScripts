#!/bin/bash

function abstract_help(){
	local cmd="$1"
	local inp="$2"
	local out="$3"
	local inpDetail="$4"
	local outDetail="$5"
	local optionUsage="$6"
cat <<EOF
${cmd}
    convert ${inp} to ${out}
    ${inp}: ${inpDetail}
    ${out}: ${outDetail}
    implementation of str2file

usage:
    + ${cmd} ${inp}
    +--- convert ${inp} to ${out} and print to stdout
    |
    + ${cmd} ${inp} > ${out}
    +--- save to the ${out} file
    |
    + ${cmd} ${inp} | <COMMAND>
    +--- input to the next command
    |
    + <COMMAND> | ${cmd}
    +--- convert the entered ${inp} data and print to stdout
    |
    + ${cmd} <(<COMMAND>)
    +--- if input by process substitution, print to stdout
    |
    + ${cmd} -o ${out} ${inp}
    + ${cmd} -o - ${inp}
    +--- if you want to force the output destination, use the -o option

option usage:
    -h, -help, --help | display this help
${optionUsage}

EOF
}

function error(){
	exec 1>&2
	help
	while [ "$#" -ge 1 ]; do echo -e "\e[31m$1\e[m"; shift; done
	exit 1
}

function warning(){
	while [ "$#" -ge 1 ]; do echo -e "\e[31m$1\e[m" >&2 ; shift; done
}

function set_args(){
	args=("$0" "$@")
}

function shift_args(){
	local n="$1"
	args=("${args[@]:$n}")
}

function parse_args(){
	# parse -o option
	local outputDestIsForced=
	local forcedOutputDestType= # unforced, stdout, pattfile, fixfile
	local forcedOutputDest=
	local forcedOutputDestPatt=
	if [ "${#args[@]}" -ge 2 ] && [ "${args[1]}" = "-o" ]; then
		outputDestIsForced=true
		local value="${args[2]}"
		if [ "$value" = "-" ]; then
			forcedOutputDestType=stdout
			forcedOutputDest="-"
		else
			forcedOutputDestType=fixfile
			forcedOutputDest="$value"
		fi
		shift_args 2
	else
		outputDestIsForced=false
		forcedOutputDestType=unforced
		forcedOutputDest=`get_default_output_path`
	fi

	# parse options of implemented script
	parse_option

	# parse inp data and out
	inpStr="${args[1]}"
	if [ "$forcedOutputDestType" = "fixfile" ] || [ "$forcedOutputDestType" = "unforced" ] ; then
		exec > "$forcedOutputDest"
	fi
}

#function parse_option(){
#	# parse option from "${args[@]}"
#}

#function get_default_output_path(){
#	echo 'str2file.out'
#}

#function process(){
#	# $1: inpStr
#}

function main(){
	set_args "$@"
	parse_args "$@"

	process "$inpStr"
}
